<?php
// $Id$

/**
 * @file
 *
 * This module allow to add short link in automatically by external service such
 * as To.ly, Is.gd, Bit.ly. The link are added in a $link ndoe variables.
 * 
 */

/**
  *
  * Settings of module
  * @param $var can be recive some different value
  * @param $var if are = "list" return a list of implemented apis
  * @param $var if are = "<NAMEAPI>class" return new object of relative class
  * @param $var if are = "include" include API's class files
  *
  */

function _shorty_apiclass($var){
  $shorty_service = array(
    'bitly' => t('Bit.ly'),
    'toly' => t('To.ly'),
    'isgd' => t('Is.gd')
  );

  if($var == 'include') {
    module_load_include('php', 'shorty', variable_get('shorty_apiservice',''));
  }
  
  if($var == 'list') {
    return $shorty_service;
  }
  if($var == 'bitlyclass') {
    return new BitLy(variable_get('shorty_bitlyuser', ''), variable_get('shorty_bitlyapikey', ''));
  }
  
  if($var == 'tolyclass') {
    return new ToLy('user', 'api');
  }

  if($var == 'isgdclass') {
    return new IsGd('user', 'api');
  }
}

/**
  * Implementation of hook_help()
  */
function shorty_help($path,$arg){
  $output='';

  switch($path){
  	case 'admin/module#description';
  	  $outoput = t('Module allows to add a  short link to each node by external API.');
  	break;
	}
  return $output;
}

/**
  * Implementation of hook_perm()
  */
function shorty_perm(){
	return array('access content');
}

/**
  * Implementation of hook_menu()
  */
function shorty_menu() {
  $items = array();

  $items['admin/settings/shorty'] = array(
    'title' => 'Shorty API',
    'description' => 'Allow to import Wordpress Post directly by him database tables.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shorty_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/shorty/main'] = array(
    'title' => 'General',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/settings/shorty/bitly']  =  array(
    'title' => 'Bitly', 
    'description' => 'Bitly', 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('shorty_admin_bitly'), 
    'access arguments' => array('adminster site configuration'), 
    'type' => MENU_LOCAL_TASK,
    'weight' => 1
  );

  return $items;
}

function shorty_admin(){
  $form = array();
  
  $form['shorty_apiservice'] = array(
    '#type' => 'radios',
    '#title' => t('Enable Service'),
    '#options' => _shorty_apiclass('list'),
    '#default_value' => variable_get('shorty_apiservice', 'toly')
  );

  $form['shorty_nodetype'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Active shorty on nodes'),
    '#options' => node_get_types($op = 'names', $node = NULL, $reset = FALSE),
    '#default_value' => variable_get('shorty_nodetype', 'page')
  );

  $form['shorty_position'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Active shorty on nodes'),
    '#options' => array('links' => t('Printed Aumatically in $links variaible'), 'variable' => t('Enabled custom variable in a node.tpl.php files named $shorty.')),
    '#default_value' => variable_get('shorty_position', 'links')
  );

  return system_settings_form($form);
}

function shorty_admin_bitly() {
  $form = array();

  $form['shorty_bitlyuser'] = array(
    '#type' => 'textfield',
    '#title' => t('Bit.ly User'),    
    '#default_value' => variable_get('shorty_bitlyuser', '')
  );
  
  $form['shorty_bitlyapikey'] = array(
    '#type' => 'textfield',
    '#title' => t('Bit.ly Api Key'),    
    '#default_value' => variable_get('shorty_bitlyapikey', ''),
    '#description' => 'You can request one <a href="http://bit.ly/account/your_api_key">here</a>.'
  );
  
  return system_settings_form($form);
}

/**
  * Implementation of hook_valdate()
  */
function shorty_admin_bitly_validate($form, &$form_state) {
  //Include Bit.ly Class file
  module_load_include('php', 'shorty', 'bitly');
  
  //Retrive information
  //Get Username
  $user = $form_state['values']['shorty_bitlyuser'];
  
  //Get ApiKey
  $apikey = $form_state['values']['shorty_bitlyapikey'];
  
  if($user != '' && $apikey != '') {
    //check recived information
    $bitly = new BitLy($user, $apikey);
    $curl=explode('/',$bitly->shorten($url='http://www.kiuz.it'));
    if($curl[0] == '' OR $curl[0] == null) {
      drupal_set_message('Bit.ly Api User "' . $user . '" or key <em>"' . $apikey . '"</em> incorrect.', $type = 'error', $repeat = TRUE);
    }
    drupal_set_message('Bit.ly user and API key are saved. User: ' . $user . ' with API key ' . $apikey, $type = 'status', $repeat = FALSE);
  }
}

/**
  * Implementation of hook_nodeapi()
  **/
function shorty_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  $nodes = variable_get('shorty_nodetype','');
  
  if($nodes[$node->type]){
  _shorty_apiclass('include');
      
    switch ($op) {
      case "insert":
        $shortyclass = _shorty_apiclass(variable_get('shorty_apiservice', '') . 'class'); 
        $url = url('node/' . $node->nid, array('absolute' => TRUE));
        $record = (object) NULL;
        $record->service = variable_get('shorty_apiservice', '');
        $record->hash = $shortyclass->shorten($url);
        $record->nid = $node->nid;
        $record->timech = time();
        drupal_write_record('shortyalias', $record);
        drupal_set_message('Shorty module has added new hashed link ' . $record->hash , $type = 'status', $repeat = FALSE);
      break;
      case "update":
          $shortyclass = _shorty_apiclass(variable_get('shorty_apiservice', '') . 'class');
          $url = url('node/' . $node->nid, array('absolute' => TRUE));
          $query = db_query("SELECT sid, hash FROM {shortyalias} WHERE nid = '%d'", $node->nid);
          $row = db_fetch_array($query);
          if($row != 0) {
            if($row['hash'] != $shortyclass->shorten($url)) {
              $subquery = db_query("UPDATE {shortyalias} SET hash = '%s', timech = '%d' WHERE sid = '%d'", $shortyclass->shorten($url), time(), $row['sid']);
              drupal_set_message('Shorty module has updated node with newe hashed link ' . $shortyclass->shorten($url) , $type = 'warning', $repeat = FALSE);
            }
          }else {
            $record = (object) NULL;
            $record->service = variable_get('shorty_apiservice', '');
            $record->hash = $shortyclass->shorten($url);
            $record->nid = $node->nid;
            $record->timech = time();
            drupal_write_record('shortyalias', $record);
            drupal_set_message('Shorty module has added new hashed link ' . $record->hash , $type = 'status', $repeat = FALSE);
          }
      break;
      case "delete":
        $query = db_query("SELECT sid, hash FROM {shortyalias} WHERE nid = '%d'",$node->nid);
        $row = db_fetch_array($query);
        if($row != 0) {
          $query = db_query("DELETE FROM {shortyalias} WHERE nid = '%d'", $node->nid);
          drupal_set_message('Shorty module has deleted one or more hased link associate to node.', $type = 'warning', $repeat = FALSE);
        }
      break;
    }
  }
}

/**
  * Implementation of hook_link_alter()
  */
function shorty_link_alter(&$links, $node) {
  $linkoption = variable_get('shorty_position', '');
  if($linkoption['links']){
    $query = db_query("SELECT sid, hash FROM {shortyalias} WHERE nid = '%d'", $node->nid);
    $row = db_fetch_array($query);
    $links['shorty']['title'] = $links['shorty']['href'] = $row['hash'];
  }
}

/**
  * Implementation of hook_preprocess_node()
  */
function shorty_preprocess_node(&$vars){
  $linkoption = variable_get('shorty_position','');
  if($linkoption['variable']){
    $query = db_query("SELECT sid, hash FROM {shortyalias} WHERE nid = '%d'", $vars['nid']);
    $row = db_fetch_array($query);
    if($row != 0){
      $vars['shorty'] = '<span id="shorty"><b>' . t('Copy and share:') . '</b> <a href="' . $row['hash'] . '">' . $row['hash'] . '</a></span>';
    }
  }
  return $vars;
}
